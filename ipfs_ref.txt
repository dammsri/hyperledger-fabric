## download ipfs cluster ctl
wget https://dist.ipfs.tech/ipfs-cluster-ctl/v1.0.8/ipfs-cluster-ctl_v1.0.8_linux-amd64.tar.gz
tar xvzf ipfs-cluster-ctl_v1.0.8_linux-amd64.tar.gz

## download docker file
wget https://raw.githubusercontent.com/ipfs/ipfs-cluster/v1.0.8/docker-compose.yml

## generate secret

export IPFS_CLUSTER_SECRET=$(od -vN 32 -An -tx1 /dev/urandom | tr -d ' \n')
echo $IPFS_CLUSTER_SECRET

# export IPFS_CLUSTER_SECRET=64d0be1e4a0a2713bda4aa5be8462ae6103eb6ac77e760ce6f9d11b2bb6faff8

# Note: It is recommended to remove all default bootstrap for a private network

# After starting ipfs container, remove all default bootstrap and add bootstrap
docker exec -it ipfs-org2 /bin/sh
ipfs bootstrap list
ipfs bootstrap rm all
ipfs bootstrap add /ip4/<IP>>/tcp/4001/p2p/<ID>

# In Second cluster node, add the first node as bootstrap (inside docker-compose)
# by default all cluster nodes will identify each other via dns4 recovery, for a multi node network use Public IP.
CLUSTER_PEER0="/ip4/<IP>/tcp/9096/p2p/<ID>"
# --bootstrap <peer-multiaddress1,peer-multiaddress2>
#command:
    #  - "daemon --bootstrap ${CLUSTER_PEER0}" # add multiple peers with comma seperated

# docker exec -it ipfs-cluster-org1 /bin/sh
ipfs-cluster-ctl peers ls  # it should see other peers

### Ref: https://medium.com/rahasak/multi-node-ipfs-cluster-on-docker-596085bd07e0

